{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ShapeType_1 = require(\"../Enums/ShapeType\");\n\nvar Updater_1 = require(\"./Particle/Updater\");\n\nvar Utils_1 = require(\"./Utils/Utils\");\n\nvar PolygonMaskType_1 = require(\"../Enums/PolygonMaskType\");\n\nvar RotateDirection_1 = require(\"../Enums/RotateDirection\");\n\nvar ColorUtils_1 = require(\"./Utils/ColorUtils\");\n\nvar Particles_1 = require(\"./Options/Particles/Particles\");\n\nvar SizeAnimationStatus_1 = require(\"../Enums/SizeAnimationStatus\");\n\nvar OpacityAnimationStatus_1 = require(\"../Enums/OpacityAnimationStatus\");\n\nvar Particle = function () {\n  function Particle(container, position, emitter) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n\n    this.container = container;\n    this.emitter = emitter;\n    this.fill = true;\n    this.close = true;\n    this.links = [];\n    var options = container.options;\n    var particlesOptions = new Particles_1.Particles();\n    particlesOptions.load(options.particles);\n\n    if ((emitter === null || emitter === void 0 ? void 0 : emitter.emitterOptions.particles) !== undefined) {\n      var shapeType = emitter.emitterOptions.particles.shape.type;\n      this.shape = shapeType instanceof Array ? Utils_1.Utils.itemFromArray(shapeType) : shapeType;\n      var shapeData = emitter.emitterOptions.particles.shape.options[this.shape];\n\n      if (shapeData) {\n        this.shapeData = shapeData instanceof Array ? Utils_1.Utils.itemFromArray(shapeData) : shapeData;\n        this.fill = (_a = this.shapeData.fill) !== null && _a !== void 0 ? _a : this.fill;\n        this.close = (_b = this.shapeData.close) !== null && _b !== void 0 ? _b : this.close;\n      }\n\n      particlesOptions.load((_c = this.shapeData) === null || _c === void 0 ? void 0 : _c.particles);\n      particlesOptions.load(emitter.emitterOptions.particles);\n    } else {\n      var shapeType = options.particles.shape.type;\n      this.shape = shapeType instanceof Array ? Utils_1.Utils.itemFromArray(shapeType) : shapeType;\n      var shapeData = options.particles.shape.options[this.shape];\n\n      if (shapeData) {\n        this.shapeData = shapeData instanceof Array ? Utils_1.Utils.itemFromArray(shapeData) : shapeData;\n        this.fill = (_d = this.shapeData.fill) !== null && _d !== void 0 ? _d : this.fill;\n        this.close = (_e = this.shapeData.close) !== null && _e !== void 0 ? _e : this.close;\n      }\n\n      particlesOptions.load((_f = this.shapeData) === null || _f === void 0 ? void 0 : _f.particles);\n    }\n\n    this.particlesOptions = particlesOptions;\n    container.retina.initParticle(this);\n    var color = this.particlesOptions.color;\n    var sizeValue = (_g = this.sizeValue) !== null && _g !== void 0 ? _g : container.retina.sizeValue;\n    var randomSize = typeof this.particlesOptions.size.random === \"boolean\" ? this.particlesOptions.size.random : this.particlesOptions.size.random.enable;\n    this.size = {\n      value: randomSize && this.randomMinimumSize !== undefined ? Utils_1.Utils.randomInRange(this.randomMinimumSize, sizeValue) * this.container.retina.pixelRatio : sizeValue\n    };\n    this.direction = emitter ? emitter.emitterOptions.direction : this.particlesOptions.move.direction;\n    this.bubble = {};\n    this.angle = this.particlesOptions.rotate.random ? Math.random() * 360 : this.particlesOptions.rotate.value;\n\n    if (this.particlesOptions.rotate.direction == RotateDirection_1.RotateDirection.random) {\n      var index = Math.floor(Math.random() * 2);\n\n      if (index > 0) {\n        this.rotateDirection = RotateDirection_1.RotateDirection.counterClockwise;\n      } else {\n        this.rotateDirection = RotateDirection_1.RotateDirection.clockwise;\n      }\n    } else {\n      this.rotateDirection = this.particlesOptions.rotate.direction;\n    }\n\n    if (this.particlesOptions.size.animation.enable) {\n      this.size.status = SizeAnimationStatus_1.SizeAnimationStatus.increasing;\n      this.size.velocity = ((_h = this.sizeAnimationSpeed) !== null && _h !== void 0 ? _h : container.retina.sizeAnimationSpeed) / 100;\n\n      if (!this.particlesOptions.size.animation.sync) {\n        this.size.velocity = this.size.velocity * Math.random();\n      }\n    }\n\n    if (this.particlesOptions.rotate.animation.enable) {\n      if (!this.particlesOptions.rotate.animation.sync) {\n        this.angle = Math.random() * 360;\n      }\n    }\n\n    this.position = this.calcPosition(this.container, position);\n\n    if (options.polygon.enable && options.polygon.type === PolygonMaskType_1.PolygonMaskType.inline) {\n      this.initialPosition = {\n        x: this.position.x,\n        y: this.position.y\n      };\n    }\n\n    this.offset = {\n      x: 0,\n      y: 0\n    };\n\n    if (this.particlesOptions.collisions.enable) {\n      this.checkOverlap(position);\n    }\n\n    if (color instanceof Array) {\n      this.color = ColorUtils_1.ColorUtils.colorToRgb(Utils_1.Utils.itemFromArray(color));\n    } else {\n      this.color = ColorUtils_1.ColorUtils.colorToRgb(color);\n    }\n\n    var randomOpacity = this.particlesOptions.opacity.random;\n    var opacityValue = this.particlesOptions.opacity.value;\n    this.opacity = {\n      value: randomOpacity.enable ? Utils_1.Utils.randomInRange(randomOpacity.minimumValue, opacityValue) : opacityValue\n    };\n\n    if (this.particlesOptions.opacity.animation.enable) {\n      this.opacity.status = OpacityAnimationStatus_1.OpacityAnimationStatus.increasing;\n      this.opacity.velocity = this.particlesOptions.opacity.animation.speed / 100;\n\n      if (!this.particlesOptions.opacity.animation.sync) {\n        this.opacity.velocity *= Math.random();\n      }\n    }\n\n    this.initialVelocity = this.calculateVelocity();\n    this.velocity = {\n      horizontal: this.initialVelocity.horizontal,\n      vertical: this.initialVelocity.vertical\n    };\n\n    if (this.shape === ShapeType_1.ShapeType.image) {\n      var shape = this.particlesOptions.shape;\n      var index = Utils_1.Utils.arrayRandomIndex(container.images);\n      var image = container.images[index];\n      var optionsImage = shape.image instanceof Array ? shape.image[index] : shape.image;\n      this.image = {\n        data: image,\n        ratio: optionsImage.width / optionsImage.height,\n        replaceColor: optionsImage.replaceColor,\n        src: optionsImage.src\n      };\n\n      if (!this.image.ratio) {\n        this.image.ratio = 1;\n      }\n\n      this.fill = (_j = optionsImage.fill) !== null && _j !== void 0 ? _j : this.fill;\n      this.close = (_k = optionsImage.close) !== null && _k !== void 0 ? _k : this.close;\n    }\n\n    this.stroke = this.particlesOptions.stroke instanceof Array ? Utils_1.Utils.itemFromArray(this.particlesOptions.stroke) : this.particlesOptions.stroke;\n    this.strokeColor = typeof this.stroke.color === \"string\" ? ColorUtils_1.ColorUtils.stringToRgb(this.stroke.color) : ColorUtils_1.ColorUtils.colorToRgb(this.stroke.color);\n    this.shadowColor = typeof this.particlesOptions.shadow.color === \"string\" ? ColorUtils_1.ColorUtils.stringToRgb(this.particlesOptions.shadow.color) : ColorUtils_1.ColorUtils.colorToRgb(this.particlesOptions.shadow.color);\n    this.updater = new Updater_1.Updater(this.container, this);\n  }\n\n  Particle.prototype.update = function (index, delta) {\n    this.links = [];\n    this.updater.update(delta);\n  };\n\n  Particle.prototype.draw = function () {\n    this.container.canvas.drawParticle(this);\n  };\n\n  Particle.prototype.isOverlapping = function () {\n    var container = this.container;\n    var p = this;\n    var collisionFound = false;\n    var iterations = 0;\n\n    for (var _i = 0, _a = container.particles.array.filter(function (t) {\n      return t != p;\n    }); _i < _a.length; _i++) {\n      var p2 = _a[_i];\n      iterations++;\n      var dist = Utils_1.Utils.getDistanceBetweenCoordinates(p.position, p2.position);\n\n      if (dist <= p.size.value + p2.size.value) {\n        collisionFound = true;\n        break;\n      }\n    }\n\n    return {\n      collisionFound: collisionFound,\n      iterations: iterations\n    };\n  };\n\n  Particle.prototype.checkOverlap = function (position) {\n    var container = this.container;\n    var p = this;\n    var overlapResult = p.isOverlapping();\n\n    if (overlapResult.iterations >= container.particles.count) {\n      container.particles.remove(this);\n    } else if (overlapResult.collisionFound) {\n      p.position.x = position ? position.x : Math.random() * container.canvas.size.width;\n      p.position.y = position ? position.y : Math.random() * container.canvas.size.height;\n      p.checkOverlap();\n    }\n  };\n\n  Particle.prototype.destroy = function () {};\n\n  Particle.prototype.calcPosition = function (container, position) {\n    var _a, _b;\n\n    var pos = {\n      x: 0,\n      y: 0\n    };\n    var options = container.options;\n\n    if (options.polygon.enable && ((_b = (_a = container.polygon.raw) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) > 0) {\n      if (position) {\n        pos.x = position.x;\n        pos.y = position.y;\n      } else {\n        var randomPoint = container.polygon.randomPointInPolygon();\n        pos.x = randomPoint.x;\n        pos.y = randomPoint.y;\n      }\n    } else {\n      pos.x = position ? position.x : Math.random() * container.canvas.size.width;\n      pos.y = position ? position.y : Math.random() * container.canvas.size.height;\n\n      if (pos.x > container.canvas.size.width - this.size.value * 2) {\n        pos.x -= this.size.value;\n      } else if (pos.x < this.size.value * 2) {\n        pos.x += this.size.value;\n      }\n\n      if (pos.y > container.canvas.size.height - this.size.value * 2) {\n        pos.y -= this.size.value;\n      } else if (pos.y < this.size.value * 2) {\n        pos.y += this.size.value;\n      }\n    }\n\n    return pos;\n  };\n\n  Particle.prototype.calculateVelocity = function () {\n    var baseVelocity = Utils_1.Utils.getParticleBaseVelocity(this);\n    var res = {\n      horizontal: 0,\n      vertical: 0\n    };\n\n    if (this.particlesOptions.move.straight) {\n      res.horizontal = baseVelocity.x;\n      res.vertical = baseVelocity.y;\n\n      if (this.particlesOptions.move.random) {\n        res.horizontal *= Math.random();\n        res.vertical *= Math.random();\n      }\n    } else {\n      res.horizontal = baseVelocity.x + Math.random() - 0.5;\n      res.vertical = baseVelocity.y + Math.random() - 0.5;\n    }\n\n    return res;\n  };\n\n  return Particle;\n}();\n\nexports.Particle = Particle;","map":{"version":3,"sources":["C:/Users/petra/Desktop/face-detection/node_modules/tsparticles/dist/Classes/Particle.js"],"names":["Object","defineProperty","exports","value","ShapeType_1","require","Updater_1","Utils_1","PolygonMaskType_1","RotateDirection_1","ColorUtils_1","Particles_1","SizeAnimationStatus_1","OpacityAnimationStatus_1","Particle","container","position","emitter","_a","_b","_c","_d","_e","_f","_g","_h","_j","_k","fill","close","links","options","particlesOptions","Particles","load","particles","emitterOptions","undefined","shapeType","shape","type","Array","Utils","itemFromArray","shapeData","retina","initParticle","color","sizeValue","randomSize","size","random","enable","randomMinimumSize","randomInRange","pixelRatio","direction","move","bubble","angle","rotate","Math","RotateDirection","index","floor","rotateDirection","counterClockwise","clockwise","animation","status","SizeAnimationStatus","increasing","velocity","sizeAnimationSpeed","sync","calcPosition","polygon","PolygonMaskType","inline","initialPosition","x","y","offset","collisions","checkOverlap","ColorUtils","colorToRgb","randomOpacity","opacity","opacityValue","minimumValue","OpacityAnimationStatus","speed","initialVelocity","calculateVelocity","horizontal","vertical","ShapeType","image","arrayRandomIndex","images","optionsImage","data","ratio","width","height","replaceColor","src","stroke","strokeColor","stringToRgb","shadowColor","shadow","updater","Updater","prototype","update","delta","draw","canvas","drawParticle","isOverlapping","p","collisionFound","iterations","_i","array","filter","t","length","p2","dist","getDistanceBetweenCoordinates","overlapResult","count","remove","destroy","pos","raw","randomPoint","randomPointInPolygon","baseVelocity","getParticleBaseVelocity","res","straight"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ShapeType_1 = require(\"../Enums/ShapeType\");\nvar Updater_1 = require(\"./Particle/Updater\");\nvar Utils_1 = require(\"./Utils/Utils\");\nvar PolygonMaskType_1 = require(\"../Enums/PolygonMaskType\");\nvar RotateDirection_1 = require(\"../Enums/RotateDirection\");\nvar ColorUtils_1 = require(\"./Utils/ColorUtils\");\nvar Particles_1 = require(\"./Options/Particles/Particles\");\nvar SizeAnimationStatus_1 = require(\"../Enums/SizeAnimationStatus\");\nvar OpacityAnimationStatus_1 = require(\"../Enums/OpacityAnimationStatus\");\nvar Particle = (function () {\n    function Particle(container, position, emitter) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n        this.container = container;\n        this.emitter = emitter;\n        this.fill = true;\n        this.close = true;\n        this.links = [];\n        var options = container.options;\n        var particlesOptions = new Particles_1.Particles();\n        particlesOptions.load(options.particles);\n        if ((emitter === null || emitter === void 0 ? void 0 : emitter.emitterOptions.particles) !== undefined) {\n            var shapeType = emitter.emitterOptions.particles.shape.type;\n            this.shape = shapeType instanceof Array ? Utils_1.Utils.itemFromArray(shapeType) : shapeType;\n            var shapeData = emitter.emitterOptions.particles.shape.options[this.shape];\n            if (shapeData) {\n                this.shapeData = shapeData instanceof Array ? Utils_1.Utils.itemFromArray(shapeData) : shapeData;\n                this.fill = (_a = this.shapeData.fill) !== null && _a !== void 0 ? _a : this.fill;\n                this.close = (_b = this.shapeData.close) !== null && _b !== void 0 ? _b : this.close;\n            }\n            particlesOptions.load((_c = this.shapeData) === null || _c === void 0 ? void 0 : _c.particles);\n            particlesOptions.load(emitter.emitterOptions.particles);\n        }\n        else {\n            var shapeType = options.particles.shape.type;\n            this.shape = shapeType instanceof Array ? Utils_1.Utils.itemFromArray(shapeType) : shapeType;\n            var shapeData = options.particles.shape.options[this.shape];\n            if (shapeData) {\n                this.shapeData = shapeData instanceof Array ? Utils_1.Utils.itemFromArray(shapeData) : shapeData;\n                this.fill = (_d = this.shapeData.fill) !== null && _d !== void 0 ? _d : this.fill;\n                this.close = (_e = this.shapeData.close) !== null && _e !== void 0 ? _e : this.close;\n            }\n            particlesOptions.load((_f = this.shapeData) === null || _f === void 0 ? void 0 : _f.particles);\n        }\n        this.particlesOptions = particlesOptions;\n        container.retina.initParticle(this);\n        var color = this.particlesOptions.color;\n        var sizeValue = ((_g = this.sizeValue) !== null && _g !== void 0 ? _g : container.retina.sizeValue);\n        var randomSize = typeof this.particlesOptions.size.random === \"boolean\" ?\n            this.particlesOptions.size.random :\n            this.particlesOptions.size.random.enable;\n        this.size = {\n            value: randomSize && this.randomMinimumSize !== undefined ?\n                Utils_1.Utils.randomInRange(this.randomMinimumSize, sizeValue) * this.container.retina.pixelRatio :\n                sizeValue,\n        };\n        this.direction = emitter ? emitter.emitterOptions.direction : this.particlesOptions.move.direction;\n        this.bubble = {};\n        this.angle = this.particlesOptions.rotate.random ? Math.random() * 360 : this.particlesOptions.rotate.value;\n        if (this.particlesOptions.rotate.direction == RotateDirection_1.RotateDirection.random) {\n            var index = Math.floor(Math.random() * 2);\n            if (index > 0) {\n                this.rotateDirection = RotateDirection_1.RotateDirection.counterClockwise;\n            }\n            else {\n                this.rotateDirection = RotateDirection_1.RotateDirection.clockwise;\n            }\n        }\n        else {\n            this.rotateDirection = this.particlesOptions.rotate.direction;\n        }\n        if (this.particlesOptions.size.animation.enable) {\n            this.size.status = SizeAnimationStatus_1.SizeAnimationStatus.increasing;\n            this.size.velocity = ((_h = this.sizeAnimationSpeed) !== null && _h !== void 0 ? _h : container.retina.sizeAnimationSpeed) / 100;\n            if (!this.particlesOptions.size.animation.sync) {\n                this.size.velocity = this.size.velocity * Math.random();\n            }\n        }\n        if (this.particlesOptions.rotate.animation.enable) {\n            if (!this.particlesOptions.rotate.animation.sync) {\n                this.angle = Math.random() * 360;\n            }\n        }\n        this.position = this.calcPosition(this.container, position);\n        if (options.polygon.enable && options.polygon.type === PolygonMaskType_1.PolygonMaskType.inline) {\n            this.initialPosition = {\n                x: this.position.x,\n                y: this.position.y,\n            };\n        }\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        if (this.particlesOptions.collisions.enable) {\n            this.checkOverlap(position);\n        }\n        if (color instanceof Array) {\n            this.color = ColorUtils_1.ColorUtils.colorToRgb(Utils_1.Utils.itemFromArray(color));\n        }\n        else {\n            this.color = ColorUtils_1.ColorUtils.colorToRgb(color);\n        }\n        var randomOpacity = this.particlesOptions.opacity.random;\n        var opacityValue = this.particlesOptions.opacity.value;\n        this.opacity = {\n            value: randomOpacity.enable ? Utils_1.Utils.randomInRange(randomOpacity.minimumValue, opacityValue) : opacityValue,\n        };\n        if (this.particlesOptions.opacity.animation.enable) {\n            this.opacity.status = OpacityAnimationStatus_1.OpacityAnimationStatus.increasing;\n            this.opacity.velocity = this.particlesOptions.opacity.animation.speed / 100;\n            if (!this.particlesOptions.opacity.animation.sync) {\n                this.opacity.velocity *= Math.random();\n            }\n        }\n        this.initialVelocity = this.calculateVelocity();\n        this.velocity = {\n            horizontal: this.initialVelocity.horizontal,\n            vertical: this.initialVelocity.vertical,\n        };\n        if (this.shape === ShapeType_1.ShapeType.image) {\n            var shape = this.particlesOptions.shape;\n            var index = Utils_1.Utils.arrayRandomIndex(container.images);\n            var image = container.images[index];\n            var optionsImage = shape.image instanceof Array ? shape.image[index] : shape.image;\n            this.image = {\n                data: image,\n                ratio: optionsImage.width / optionsImage.height,\n                replaceColor: optionsImage.replaceColor,\n                src: optionsImage.src,\n            };\n            if (!this.image.ratio) {\n                this.image.ratio = 1;\n            }\n            this.fill = (_j = optionsImage.fill) !== null && _j !== void 0 ? _j : this.fill;\n            this.close = (_k = optionsImage.close) !== null && _k !== void 0 ? _k : this.close;\n        }\n        this.stroke = this.particlesOptions.stroke instanceof Array ?\n            Utils_1.Utils.itemFromArray(this.particlesOptions.stroke) :\n            this.particlesOptions.stroke;\n        this.strokeColor = typeof this.stroke.color === \"string\" ?\n            ColorUtils_1.ColorUtils.stringToRgb(this.stroke.color) :\n            ColorUtils_1.ColorUtils.colorToRgb(this.stroke.color);\n        this.shadowColor = typeof this.particlesOptions.shadow.color === \"string\" ?\n            ColorUtils_1.ColorUtils.stringToRgb(this.particlesOptions.shadow.color) :\n            ColorUtils_1.ColorUtils.colorToRgb(this.particlesOptions.shadow.color);\n        this.updater = new Updater_1.Updater(this.container, this);\n    }\n    Particle.prototype.update = function (index, delta) {\n        this.links = [];\n        this.updater.update(delta);\n    };\n    Particle.prototype.draw = function () {\n        this.container.canvas.drawParticle(this);\n    };\n    Particle.prototype.isOverlapping = function () {\n        var container = this.container;\n        var p = this;\n        var collisionFound = false;\n        var iterations = 0;\n        for (var _i = 0, _a = container.particles.array.filter(function (t) { return t != p; }); _i < _a.length; _i++) {\n            var p2 = _a[_i];\n            iterations++;\n            var dist = Utils_1.Utils.getDistanceBetweenCoordinates(p.position, p2.position);\n            if (dist <= p.size.value + p2.size.value) {\n                collisionFound = true;\n                break;\n            }\n        }\n        return {\n            collisionFound: collisionFound,\n            iterations: iterations,\n        };\n    };\n    Particle.prototype.checkOverlap = function (position) {\n        var container = this.container;\n        var p = this;\n        var overlapResult = p.isOverlapping();\n        if (overlapResult.iterations >= container.particles.count) {\n            container.particles.remove(this);\n        }\n        else if (overlapResult.collisionFound) {\n            p.position.x = position ? position.x : Math.random() * container.canvas.size.width;\n            p.position.y = position ? position.y : Math.random() * container.canvas.size.height;\n            p.checkOverlap();\n        }\n    };\n    Particle.prototype.destroy = function () {\n    };\n    Particle.prototype.calcPosition = function (container, position) {\n        var _a, _b;\n        var pos = { x: 0, y: 0 };\n        var options = container.options;\n        if (options.polygon.enable && ((_b = (_a = container.polygon.raw) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) > 0) {\n            if (position) {\n                pos.x = position.x;\n                pos.y = position.y;\n            }\n            else {\n                var randomPoint = container.polygon.randomPointInPolygon();\n                pos.x = randomPoint.x;\n                pos.y = randomPoint.y;\n            }\n        }\n        else {\n            pos.x = position ? position.x : Math.random() * container.canvas.size.width;\n            pos.y = position ? position.y : Math.random() * container.canvas.size.height;\n            if (pos.x > container.canvas.size.width - this.size.value * 2) {\n                pos.x -= this.size.value;\n            }\n            else if (pos.x < this.size.value * 2) {\n                pos.x += this.size.value;\n            }\n            if (pos.y > container.canvas.size.height - this.size.value * 2) {\n                pos.y -= this.size.value;\n            }\n            else if (pos.y < this.size.value * 2) {\n                pos.y += this.size.value;\n            }\n        }\n        return pos;\n    };\n    Particle.prototype.calculateVelocity = function () {\n        var baseVelocity = Utils_1.Utils.getParticleBaseVelocity(this);\n        var res = {\n            horizontal: 0,\n            vertical: 0,\n        };\n        if (this.particlesOptions.move.straight) {\n            res.horizontal = baseVelocity.x;\n            res.vertical = baseVelocity.y;\n            if (this.particlesOptions.move.random) {\n                res.horizontal *= Math.random();\n                res.vertical *= Math.random();\n            }\n        }\n        else {\n            res.horizontal = baseVelocity.x + Math.random() - 0.5;\n            res.vertical = baseVelocity.y + Math.random() - 0.5;\n        }\n        return res;\n    };\n    return Particle;\n}());\nexports.Particle = Particle;\n"]},"metadata":{},"sourceType":"script"}