{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar PolygonMaskType_1 = require(\"../Enums/PolygonMaskType\");\n\nvar Particle_1 = require(\"./Particle\");\n\nvar PolygonMaskInlineArrangement_1 = require(\"../Enums/PolygonMaskInlineArrangement\");\n\nvar Utils_1 = require(\"./Utils/Utils\");\n\nvar Constants_1 = require(\"./Utils/Constants\");\n\nvar PolygonMask = function () {\n  function PolygonMask(container) {\n    this.container = container;\n    this.dimension = {\n      height: 0,\n      width: 0\n    };\n    this.paths = [];\n    this.path2DSupported = window.hasOwnProperty(\"Path2D\");\n  }\n\n  PolygonMask.prototype.checkInsidePolygon = function (position) {\n    var container = this.container;\n    var options = container.options;\n\n    if (!options.polygon.enable || options.polygon.type === PolygonMaskType_1.PolygonMaskType.none || options.polygon.type === PolygonMaskType_1.PolygonMaskType.inline) {\n      return true;\n    }\n\n    if (!this.raw) {\n      throw new Error(Constants_1.Constants.noPolygonFound);\n    }\n\n    var x = position ? position.x : Math.random() * container.canvas.size.width;\n    var y = position ? position.y : Math.random() * container.canvas.size.height;\n    var inside = false;\n\n    for (var i = 0, j = this.raw.length - 1; i < this.raw.length; j = i++) {\n      var xi = this.raw[i].x;\n      var yi = this.raw[i].y;\n      var xj = this.raw[j].x;\n      var yj = this.raw[j].y;\n      var intersect = yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\n\n      if (intersect) {\n        inside = !inside;\n      }\n    }\n\n    if (options.polygon.type === PolygonMaskType_1.PolygonMaskType.inside) {\n      return inside;\n    } else if (options.polygon.type === PolygonMaskType_1.PolygonMaskType.outside) {\n      return !inside;\n    }\n\n    return false;\n  };\n\n  PolygonMask.prototype.redraw = function () {\n    var _this = this;\n\n    var container = this.container;\n    var options = container.options;\n\n    if (options.polygon.enable && options.polygon.type !== PolygonMaskType_1.PolygonMaskType.none) {\n      if (this.redrawTimeout) {\n        clearTimeout(this.redrawTimeout);\n      }\n\n      this.redrawTimeout = window.setTimeout(function () {\n        _this.parseSvgPathToPolygon().then(function (data) {\n          _this.raw = data;\n\n          _this.createPath2D();\n\n          container.particles.redraw();\n        });\n      }, 250);\n    }\n  };\n\n  PolygonMask.prototype.init = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var container, options, _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            container = this.container;\n            options = container.options;\n            if (!(options.polygon.enable && options.polygon.url)) return [3, 2];\n            _a = this;\n            return [4, this.parseSvgPathToPolygon(options.polygon.url)];\n\n          case 1:\n            _a.raw = _b.sent();\n            this.createPath2D();\n            _b.label = 2;\n\n          case 2:\n            return [2];\n        }\n      });\n    });\n  };\n\n  PolygonMask.prototype.reset = function () {\n    delete this.raw;\n    this.paths = [];\n    delete this.svg;\n  };\n\n  PolygonMask.prototype.randomPointInPolygon = function () {\n    var container = this.container;\n    var options = container.options;\n    var position;\n\n    if (options.polygon.type === PolygonMaskType_1.PolygonMaskType.inline) {\n      switch (options.polygon.inline.arrangement) {\n        case PolygonMaskInlineArrangement_1.PolygonMaskInlineArrangement.randomPoint:\n          position = this.getRandomPointOnPolygonPath();\n          break;\n\n        case PolygonMaskInlineArrangement_1.PolygonMaskInlineArrangement.randomLength:\n          position = this.getRandomPointOnPolygonPathByLength();\n          break;\n\n        case PolygonMaskInlineArrangement_1.PolygonMaskInlineArrangement.equidistant:\n          position = this.getEquidistantPointOnPolygonPathByIndex(container.particles.count);\n          break;\n\n        case PolygonMaskInlineArrangement_1.PolygonMaskInlineArrangement.onePerPoint:\n        case PolygonMaskInlineArrangement_1.PolygonMaskInlineArrangement.perPoint:\n        default:\n          position = this.getPointOnPolygonPathByIndex(container.particles.count);\n      }\n    } else {\n      position = {\n        x: Math.random() * container.canvas.size.width,\n        y: Math.random() * container.canvas.size.height\n      };\n    }\n\n    if (this.checkInsidePolygon(position)) {\n      return position;\n    } else {\n      return this.randomPointInPolygon();\n    }\n  };\n\n  PolygonMask.prototype.parseSvgPathToPolygon = function (svgUrl) {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var container, options, url, req, xml, parser, doc, svgPaths, i, path, pxRatio, scale, position, polygonRaw, _i, _b, path, len, p, i, segment, absSeg, relSeg;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            container = this.container;\n            options = container.options;\n            url = svgUrl || options.polygon.url;\n            if (!(!this.paths.length || !this.svg)) return [3, 4];\n            return [4, fetch(url)];\n\n          case 1:\n            req = _c.sent();\n            if (!req.ok) return [3, 3];\n            return [4, req.text()];\n\n          case 2:\n            xml = _c.sent();\n            parser = new DOMParser();\n            doc = parser.parseFromString(xml, \"image/svg+xml\");\n            this.svg = doc.getElementsByTagName(\"svg\")[0];\n            svgPaths = doc.getElementsByTagName(\"path\");\n\n            for (i = 0; i < svgPaths.length; i++) {\n              path = svgPaths.item(i);\n\n              if (path) {\n                this.paths.push({\n                  element: path,\n                  length: path.getTotalLength()\n                });\n              }\n            }\n\n            return [3, 4];\n\n          case 3:\n            throw new Error(\"tsParticles Error - Error occurred during polygon mask download\");\n\n          case 4:\n            pxRatio = container.retina.pixelRatio;\n            scale = options.polygon.scale / pxRatio;\n            this.dimension.width = parseFloat(this.svg.getAttribute(\"width\") || \"0\") * scale;\n            this.dimension.height = parseFloat(this.svg.getAttribute(\"height\") || \"0\") * scale;\n            position = (_a = options.polygon.position) !== null && _a !== void 0 ? _a : {\n              x: 50,\n              y: 50\n            };\n            this.offset = {\n              x: container.canvas.size.width * position.x / (100 * pxRatio) - this.dimension.width / 2,\n              y: container.canvas.size.height * position.y / (100 * pxRatio) - this.dimension.height / 2\n            };\n            polygonRaw = [];\n\n            for (_i = 0, _b = this.paths; _i < _b.length; _i++) {\n              path = _b[_i];\n              len = path.element.pathSegList.numberOfItems;\n              p = {\n                x: 0,\n                y: 0\n              };\n\n              for (i = 0; i < len; i++) {\n                segment = path.element.pathSegList.getItem(i);\n\n                switch (segment.pathSegType) {\n                  case window.SVGPathSeg.PATHSEG_MOVETO_ABS:\n                  case window.SVGPathSeg.PATHSEG_LINETO_ABS:\n                  case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\n                  case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\n                  case window.SVGPathSeg.PATHSEG_ARC_ABS:\n                  case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\n                  case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:\n                    absSeg = segment;\n                    p.x = absSeg.x;\n                    p.y = absSeg.y;\n                    break;\n\n                  case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\n                    p.x = segment.x;\n                    break;\n\n                  case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\n                    p.y = segment.y;\n                    break;\n\n                  case window.SVGPathSeg.PATHSEG_LINETO_REL:\n                  case window.SVGPathSeg.PATHSEG_MOVETO_REL:\n                  case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL:\n                  case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\n                  case window.SVGPathSeg.PATHSEG_ARC_REL:\n                  case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\n                  case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:\n                    relSeg = segment;\n                    p.x += relSeg.x;\n                    p.y += relSeg.y;\n                    break;\n\n                  case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\n                    p.x += segment.x;\n                    break;\n\n                  case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL:\n                    p.y += segment.y;\n                    break;\n\n                  case window.SVGPathSeg.PATHSEG_UNKNOWN:\n                  case window.SVGPathSeg.PATHSEG_CLOSEPATH:\n                    continue;\n                }\n\n                polygonRaw.push({\n                  x: p.x * scale + this.offset.x,\n                  y: p.y * scale + this.offset.y\n                });\n              }\n            }\n\n            return [2, polygonRaw];\n        }\n      });\n    });\n  };\n\n  PolygonMask.prototype.drawPolygon = function () {\n    var container = this.container;\n    container.canvas.drawPolygonMask();\n  };\n\n  PolygonMask.prototype.drawPointsOnPolygonPath = function () {\n    var container = this.container;\n\n    if (this.raw) {\n      for (var _i = 0, _a = this.raw; _i < _a.length; _i++) {\n        var item = _a[_i];\n        var position = {\n          x: item.x,\n          y: item.y\n        };\n        container.particles.addParticle(new Particle_1.Particle(container, position));\n      }\n    }\n  };\n\n  PolygonMask.prototype.getRandomPointOnPolygonPath = function () {\n    if (!this.raw || !this.raw.length) throw new Error(Constants_1.Constants.noPolygonDataLoaded);\n    var coords = Utils_1.Utils.itemFromArray(this.raw);\n    return {\n      x: coords.x,\n      y: coords.y\n    };\n  };\n\n  PolygonMask.prototype.getRandomPointOnPolygonPathByLength = function () {\n    var _a, _b;\n\n    var container = this.container;\n    var options = container.options;\n    if (!this.raw || !this.raw.length || !this.paths.length) throw new Error(Constants_1.Constants.noPolygonDataLoaded);\n    var path = Utils_1.Utils.itemFromArray(this.paths);\n    var distance = Math.floor(Math.random() * path.length) + 1;\n    var point = path.element.getPointAtLength(distance);\n    return {\n      x: point.x * options.polygon.scale + (((_a = this.offset) === null || _a === void 0 ? void 0 : _a.x) || 0),\n      y: point.y * options.polygon.scale + (((_b = this.offset) === null || _b === void 0 ? void 0 : _b.y) || 0)\n    };\n  };\n\n  PolygonMask.prototype.getEquidistantPointOnPolygonPathByIndex = function (index) {\n    var _a, _b, _c, _d, _e, _f;\n\n    var container = this.container;\n    var options = container.options;\n    if (!this.raw || !this.raw.length || !this.paths.length) throw new Error(Constants_1.Constants.noPolygonDataLoaded);\n    var offset = 0;\n    var point;\n    var totalLength = this.paths.reduce(function (tot, path) {\n      return tot + path.length;\n    }, 0);\n    var distance = totalLength / options.particles.number.value;\n\n    for (var _i = 0, _g = this.paths; _i < _g.length; _i++) {\n      var path = _g[_i];\n      var pathDistance = distance * index - offset;\n\n      if (pathDistance <= path.length) {\n        point = path.element.getPointAtLength(pathDistance);\n        break;\n      } else {\n        offset += path.length;\n      }\n    }\n\n    return {\n      x: ((_a = point === null || point === void 0 ? void 0 : point.x) !== null && _a !== void 0 ? _a : 0) * options.polygon.scale + ((_c = (_b = this.offset) === null || _b === void 0 ? void 0 : _b.x) !== null && _c !== void 0 ? _c : 0),\n      y: ((_d = point === null || point === void 0 ? void 0 : point.y) !== null && _d !== void 0 ? _d : 0) * options.polygon.scale + ((_f = (_e = this.offset) === null || _e === void 0 ? void 0 : _e.y) !== null && _f !== void 0 ? _f : 0)\n    };\n  };\n\n  PolygonMask.prototype.getPointOnPolygonPathByIndex = function (index) {\n    if (!this.raw || !this.raw.length) throw new Error(Constants_1.Constants.noPolygonDataLoaded);\n    var coords = this.raw[index % this.raw.length];\n    return {\n      x: coords.x,\n      y: coords.y\n    };\n  };\n\n  PolygonMask.prototype.createPath2D = function () {\n    var _a;\n\n    if (!this.path2DSupported) {\n      return;\n    }\n\n    var _loop_1 = function (path) {\n      var pathData = (_a = path.element) === null || _a === void 0 ? void 0 : _a.getAttribute(\"d\");\n\n      if (pathData) {\n        var path2d = new Path2D(pathData);\n        var matrix = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\").createSVGMatrix();\n        var finalPath = new Path2D();\n        var transform = matrix.scale(this_1.container.options.polygon.scale);\n\n        if (finalPath.addPath) {\n          finalPath.addPath(path2d, transform);\n          path.path2d = finalPath;\n        } else {\n          delete path.path2d;\n        }\n      } else {\n        delete path.path2d;\n      }\n\n      if (!path.path2d && this_1.raw) {\n        path.path2d = new Path2D();\n        path.path2d.moveTo(this_1.raw[0].x, this_1.raw[0].y);\n        this_1.raw.forEach(function (pos, i) {\n          var _a;\n\n          if (i > 0) {\n            (_a = path.path2d) === null || _a === void 0 ? void 0 : _a.lineTo(pos.x, pos.y);\n          }\n        });\n        path.path2d.closePath();\n      }\n    };\n\n    var this_1 = this;\n\n    for (var _i = 0, _b = this.paths; _i < _b.length; _i++) {\n      var path = _b[_i];\n\n      _loop_1(path);\n    }\n  };\n\n  return PolygonMask;\n}();\n\nexports.PolygonMask = PolygonMask;","map":{"version":3,"sources":["C:/Users/petra/Desktop/face-detection/node_modules/tsparticles/dist/Classes/PolygonMask.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","Object","defineProperty","exports","PolygonMaskType_1","require","Particle_1","PolygonMaskInlineArrangement_1","Utils_1","Constants_1","PolygonMask","container","dimension","height","width","paths","path2DSupported","window","hasOwnProperty","prototype","checkInsidePolygon","position","options","polygon","enable","type","PolygonMaskType","none","inline","raw","Error","Constants","noPolygonFound","x","Math","random","canvas","size","inside","i","j","xi","yi","xj","yj","intersect","outside","redraw","_this","redrawTimeout","clearTimeout","setTimeout","parseSvgPathToPolygon","data","createPath2D","particles","init","_a","_b","url","reset","svg","randomPointInPolygon","arrangement","PolygonMaskInlineArrangement","randomPoint","getRandomPointOnPolygonPath","randomLength","getRandomPointOnPolygonPathByLength","equidistant","getEquidistantPointOnPolygonPathByIndex","count","onePerPoint","perPoint","getPointOnPolygonPathByIndex","svgUrl","req","xml","parser","doc","svgPaths","path","pxRatio","scale","polygonRaw","_i","len","p","segment","absSeg","relSeg","_c","fetch","ok","text","DOMParser","parseFromString","getElementsByTagName","item","element","getTotalLength","retina","pixelRatio","parseFloat","getAttribute","offset","pathSegList","numberOfItems","getItem","pathSegType","SVGPathSeg","PATHSEG_MOVETO_ABS","PATHSEG_LINETO_ABS","PATHSEG_CURVETO_CUBIC_ABS","PATHSEG_CURVETO_QUADRATIC_ABS","PATHSEG_ARC_ABS","PATHSEG_CURVETO_CUBIC_SMOOTH_ABS","PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS","PATHSEG_LINETO_HORIZONTAL_ABS","PATHSEG_LINETO_VERTICAL_ABS","PATHSEG_LINETO_REL","PATHSEG_MOVETO_REL","PATHSEG_CURVETO_CUBIC_REL","PATHSEG_CURVETO_QUADRATIC_REL","PATHSEG_ARC_REL","PATHSEG_CURVETO_CUBIC_SMOOTH_REL","PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL","PATHSEG_LINETO_HORIZONTAL_REL","PATHSEG_LINETO_VERTICAL_REL","PATHSEG_UNKNOWN","PATHSEG_CLOSEPATH","drawPolygon","drawPolygonMask","drawPointsOnPolygonPath","addParticle","Particle","noPolygonDataLoaded","coords","Utils","itemFromArray","distance","floor","point","getPointAtLength","index","_d","_e","_f","totalLength","reduce","tot","number","_g","pathDistance","_loop_1","pathData","path2d","Path2D","matrix","document","createElementNS","createSVGMatrix","finalPath","transform","this_1","addPath","moveTo","forEach","pos","lineTo","closePath"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PolygonMaskType_1 = require(\"../Enums/PolygonMaskType\");\nvar Particle_1 = require(\"./Particle\");\nvar PolygonMaskInlineArrangement_1 = require(\"../Enums/PolygonMaskInlineArrangement\");\nvar Utils_1 = require(\"./Utils/Utils\");\nvar Constants_1 = require(\"./Utils/Constants\");\nvar PolygonMask = (function () {\n    function PolygonMask(container) {\n        this.container = container;\n        this.dimension = {\n            height: 0,\n            width: 0,\n        };\n        this.paths = [];\n        this.path2DSupported = window.hasOwnProperty(\"Path2D\");\n    }\n    PolygonMask.prototype.checkInsidePolygon = function (position) {\n        var container = this.container;\n        var options = container.options;\n        if (!options.polygon.enable ||\n            options.polygon.type === PolygonMaskType_1.PolygonMaskType.none ||\n            options.polygon.type === PolygonMaskType_1.PolygonMaskType.inline) {\n            return true;\n        }\n        if (!this.raw) {\n            throw new Error(Constants_1.Constants.noPolygonFound);\n        }\n        var x = position ? position.x : Math.random() * container.canvas.size.width;\n        var y = position ? position.y : Math.random() * container.canvas.size.height;\n        var inside = false;\n        for (var i = 0, j = this.raw.length - 1; i < this.raw.length; j = i++) {\n            var xi = this.raw[i].x;\n            var yi = this.raw[i].y;\n            var xj = this.raw[j].x;\n            var yj = this.raw[j].y;\n            var intersect = ((yi > y) !== (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n            if (intersect) {\n                inside = !inside;\n            }\n        }\n        if (options.polygon.type === PolygonMaskType_1.PolygonMaskType.inside) {\n            return inside;\n        }\n        else if (options.polygon.type === PolygonMaskType_1.PolygonMaskType.outside) {\n            return !inside;\n        }\n        return false;\n    };\n    PolygonMask.prototype.redraw = function () {\n        var _this = this;\n        var container = this.container;\n        var options = container.options;\n        if (options.polygon.enable && options.polygon.type !== PolygonMaskType_1.PolygonMaskType.none) {\n            if (this.redrawTimeout) {\n                clearTimeout(this.redrawTimeout);\n            }\n            this.redrawTimeout = window.setTimeout(function () {\n                _this.parseSvgPathToPolygon().then(function (data) {\n                    _this.raw = data;\n                    _this.createPath2D();\n                    container.particles.redraw();\n                });\n            }, 250);\n        }\n    };\n    PolygonMask.prototype.init = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var container, options, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        container = this.container;\n                        options = container.options;\n                        if (!(options.polygon.enable && options.polygon.url)) return [3, 2];\n                        _a = this;\n                        return [4, this.parseSvgPathToPolygon(options.polygon.url)];\n                    case 1:\n                        _a.raw = _b.sent();\n                        this.createPath2D();\n                        _b.label = 2;\n                    case 2: return [2];\n                }\n            });\n        });\n    };\n    PolygonMask.prototype.reset = function () {\n        delete this.raw;\n        this.paths = [];\n        delete this.svg;\n    };\n    PolygonMask.prototype.randomPointInPolygon = function () {\n        var container = this.container;\n        var options = container.options;\n        var position;\n        if (options.polygon.type === PolygonMaskType_1.PolygonMaskType.inline) {\n            switch (options.polygon.inline.arrangement) {\n                case PolygonMaskInlineArrangement_1.PolygonMaskInlineArrangement.randomPoint:\n                    position = this.getRandomPointOnPolygonPath();\n                    break;\n                case PolygonMaskInlineArrangement_1.PolygonMaskInlineArrangement.randomLength:\n                    position = this.getRandomPointOnPolygonPathByLength();\n                    break;\n                case PolygonMaskInlineArrangement_1.PolygonMaskInlineArrangement.equidistant:\n                    position = this.getEquidistantPointOnPolygonPathByIndex(container.particles.count);\n                    break;\n                case PolygonMaskInlineArrangement_1.PolygonMaskInlineArrangement.onePerPoint:\n                case PolygonMaskInlineArrangement_1.PolygonMaskInlineArrangement.perPoint:\n                default:\n                    position = this.getPointOnPolygonPathByIndex(container.particles.count);\n            }\n        }\n        else {\n            position = {\n                x: Math.random() * container.canvas.size.width,\n                y: Math.random() * container.canvas.size.height,\n            };\n        }\n        if (this.checkInsidePolygon(position)) {\n            return position;\n        }\n        else {\n            return this.randomPointInPolygon();\n        }\n    };\n    PolygonMask.prototype.parseSvgPathToPolygon = function (svgUrl) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            var container, options, url, req, xml, parser, doc, svgPaths, i, path, pxRatio, scale, position, polygonRaw, _i, _b, path, len, p, i, segment, absSeg, relSeg;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        container = this.container;\n                        options = container.options;\n                        url = svgUrl || options.polygon.url;\n                        if (!(!this.paths.length || !this.svg)) return [3, 4];\n                        return [4, fetch(url)];\n                    case 1:\n                        req = _c.sent();\n                        if (!req.ok) return [3, 3];\n                        return [4, req.text()];\n                    case 2:\n                        xml = _c.sent();\n                        parser = new DOMParser();\n                        doc = parser.parseFromString(xml, \"image/svg+xml\");\n                        this.svg = doc.getElementsByTagName(\"svg\")[0];\n                        svgPaths = doc.getElementsByTagName(\"path\");\n                        for (i = 0; i < svgPaths.length; i++) {\n                            path = svgPaths.item(i);\n                            if (path) {\n                                this.paths.push({\n                                    element: path,\n                                    length: path.getTotalLength(),\n                                });\n                            }\n                        }\n                        return [3, 4];\n                    case 3: throw new Error(\"tsParticles Error - Error occurred during polygon mask download\");\n                    case 4:\n                        pxRatio = container.retina.pixelRatio;\n                        scale = options.polygon.scale / pxRatio;\n                        this.dimension.width = parseFloat(this.svg.getAttribute(\"width\") || \"0\") * scale;\n                        this.dimension.height = parseFloat(this.svg.getAttribute(\"height\") || \"0\") * scale;\n                        position = (_a = options.polygon.position) !== null && _a !== void 0 ? _a : {\n                            x: 50,\n                            y: 50,\n                        };\n                        this.offset = {\n                            x: container.canvas.size.width * position.x / (100 * pxRatio) - this.dimension.width / 2,\n                            y: container.canvas.size.height * position.y / (100 * pxRatio) - this.dimension.height / 2,\n                        };\n                        polygonRaw = [];\n                        for (_i = 0, _b = this.paths; _i < _b.length; _i++) {\n                            path = _b[_i];\n                            len = path.element.pathSegList.numberOfItems;\n                            p = {\n                                x: 0,\n                                y: 0,\n                            };\n                            for (i = 0; i < len; i++) {\n                                segment = path.element.pathSegList.getItem(i);\n                                switch (segment.pathSegType) {\n                                    case window.SVGPathSeg.PATHSEG_MOVETO_ABS:\n                                    case window.SVGPathSeg.PATHSEG_LINETO_ABS:\n                                    case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\n                                    case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\n                                    case window.SVGPathSeg.PATHSEG_ARC_ABS:\n                                    case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\n                                    case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:\n                                        absSeg = segment;\n                                        p.x = absSeg.x;\n                                        p.y = absSeg.y;\n                                        break;\n                                    case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\n                                        p.x = segment.x;\n                                        break;\n                                    case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\n                                        p.y = segment.y;\n                                        break;\n                                    case window.SVGPathSeg.PATHSEG_LINETO_REL:\n                                    case window.SVGPathSeg.PATHSEG_MOVETO_REL:\n                                    case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL:\n                                    case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\n                                    case window.SVGPathSeg.PATHSEG_ARC_REL:\n                                    case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\n                                    case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:\n                                        relSeg = segment;\n                                        p.x += relSeg.x;\n                                        p.y += relSeg.y;\n                                        break;\n                                    case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\n                                        p.x += segment.x;\n                                        break;\n                                    case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL:\n                                        p.y += segment.y;\n                                        break;\n                                    case window.SVGPathSeg.PATHSEG_UNKNOWN:\n                                    case window.SVGPathSeg.PATHSEG_CLOSEPATH:\n                                        continue;\n                                }\n                                polygonRaw.push({\n                                    x: p.x * scale + this.offset.x,\n                                    y: p.y * scale + this.offset.y,\n                                });\n                            }\n                        }\n                        return [2, polygonRaw];\n                }\n            });\n        });\n    };\n    PolygonMask.prototype.drawPolygon = function () {\n        var container = this.container;\n        container.canvas.drawPolygonMask();\n    };\n    PolygonMask.prototype.drawPointsOnPolygonPath = function () {\n        var container = this.container;\n        if (this.raw) {\n            for (var _i = 0, _a = this.raw; _i < _a.length; _i++) {\n                var item = _a[_i];\n                var position = {\n                    x: item.x,\n                    y: item.y,\n                };\n                container.particles.addParticle(new Particle_1.Particle(container, position));\n            }\n        }\n    };\n    PolygonMask.prototype.getRandomPointOnPolygonPath = function () {\n        if (!this.raw || !this.raw.length)\n            throw new Error(Constants_1.Constants.noPolygonDataLoaded);\n        var coords = Utils_1.Utils.itemFromArray(this.raw);\n        return {\n            x: coords.x,\n            y: coords.y,\n        };\n    };\n    PolygonMask.prototype.getRandomPointOnPolygonPathByLength = function () {\n        var _a, _b;\n        var container = this.container;\n        var options = container.options;\n        if (!this.raw || !this.raw.length || !this.paths.length)\n            throw new Error(Constants_1.Constants.noPolygonDataLoaded);\n        var path = Utils_1.Utils.itemFromArray(this.paths);\n        var distance = Math.floor(Math.random() * path.length) + 1;\n        var point = path.element.getPointAtLength(distance);\n        return {\n            x: point.x * options.polygon.scale + (((_a = this.offset) === null || _a === void 0 ? void 0 : _a.x) || 0),\n            y: point.y * options.polygon.scale + (((_b = this.offset) === null || _b === void 0 ? void 0 : _b.y) || 0),\n        };\n    };\n    PolygonMask.prototype.getEquidistantPointOnPolygonPathByIndex = function (index) {\n        var _a, _b, _c, _d, _e, _f;\n        var container = this.container;\n        var options = container.options;\n        if (!this.raw || !this.raw.length || !this.paths.length)\n            throw new Error(Constants_1.Constants.noPolygonDataLoaded);\n        var offset = 0;\n        var point;\n        var totalLength = this.paths.reduce(function (tot, path) { return tot + path.length; }, 0);\n        var distance = totalLength / options.particles.number.value;\n        for (var _i = 0, _g = this.paths; _i < _g.length; _i++) {\n            var path = _g[_i];\n            var pathDistance = distance * index - offset;\n            if (pathDistance <= path.length) {\n                point = path.element.getPointAtLength(pathDistance);\n                break;\n            }\n            else {\n                offset += path.length;\n            }\n        }\n        return {\n            x: ((_a = point === null || point === void 0 ? void 0 : point.x) !== null && _a !== void 0 ? _a : 0) * options.polygon.scale + ((_c = (_b = this.offset) === null || _b === void 0 ? void 0 : _b.x) !== null && _c !== void 0 ? _c : 0),\n            y: ((_d = point === null || point === void 0 ? void 0 : point.y) !== null && _d !== void 0 ? _d : 0) * options.polygon.scale + ((_f = (_e = this.offset) === null || _e === void 0 ? void 0 : _e.y) !== null && _f !== void 0 ? _f : 0),\n        };\n    };\n    PolygonMask.prototype.getPointOnPolygonPathByIndex = function (index) {\n        if (!this.raw || !this.raw.length)\n            throw new Error(Constants_1.Constants.noPolygonDataLoaded);\n        var coords = this.raw[index % this.raw.length];\n        return {\n            x: coords.x,\n            y: coords.y,\n        };\n    };\n    PolygonMask.prototype.createPath2D = function () {\n        var _a;\n        if (!this.path2DSupported) {\n            return;\n        }\n        var _loop_1 = function (path) {\n            var pathData = (_a = path.element) === null || _a === void 0 ? void 0 : _a.getAttribute(\"d\");\n            if (pathData) {\n                var path2d = new Path2D(pathData);\n                var matrix = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\").createSVGMatrix();\n                var finalPath = new Path2D();\n                var transform = matrix.scale(this_1.container.options.polygon.scale);\n                if (finalPath.addPath) {\n                    finalPath.addPath(path2d, transform);\n                    path.path2d = finalPath;\n                }\n                else {\n                    delete path.path2d;\n                }\n            }\n            else {\n                delete path.path2d;\n            }\n            if (!path.path2d && this_1.raw) {\n                path.path2d = new Path2D();\n                path.path2d.moveTo(this_1.raw[0].x, this_1.raw[0].y);\n                this_1.raw.forEach(function (pos, i) {\n                    var _a;\n                    if (i > 0) {\n                        (_a = path.path2d) === null || _a === void 0 ? void 0 : _a.lineTo(pos.x, pos.y);\n                    }\n                });\n                path.path2d.closePath();\n            }\n        };\n        var this_1 = this;\n        for (var _i = 0, _b = this.paths; _i < _b.length; _i++) {\n            var path = _b[_i];\n            _loop_1(path);\n        }\n    };\n    return PolygonMask;\n}());\nexports.PolygonMask = PolygonMask;\n"]},"metadata":{},"sourceType":"script"}