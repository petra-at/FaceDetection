{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ColorUtils_1 = require(\"./ColorUtils\");\n\nvar CanvasUtils = function () {\n  function CanvasUtils() {}\n\n  CanvasUtils.paintBase = function (context, dimension, baseColor) {\n    context.save();\n    context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n    context.restore();\n  };\n\n  CanvasUtils.clear = function (context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n  };\n\n  CanvasUtils.drawPolygonMask = function (context, rawData, stroke) {\n    var color = typeof stroke.color === \"string\" ? ColorUtils_1.ColorUtils.stringToRgb(stroke.color) : ColorUtils_1.ColorUtils.colorToRgb(stroke.color);\n\n    if (color) {\n      context.save();\n      context.beginPath();\n      context.moveTo(rawData[0].x, rawData[0].y);\n\n      for (var i = 1; i < rawData.length; i++) {\n        context.lineTo(rawData[i].x, rawData[i].y);\n      }\n\n      context.closePath();\n      context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromColor(color);\n      context.lineWidth = stroke.width;\n      context.stroke();\n      context.restore();\n    }\n  };\n\n  CanvasUtils.drawPolygonMaskPath = function (context, path, stroke, position) {\n    context.save();\n    context.translate(position.x, position.y);\n    var color = typeof stroke.color === \"string\" ? ColorUtils_1.ColorUtils.stringToRgb(stroke.color) : ColorUtils_1.ColorUtils.colorToRgb(stroke.color);\n\n    if (color) {\n      context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromColor(color, stroke.opacity);\n      context.lineWidth = stroke.width;\n      context.stroke(path);\n    }\n\n    context.restore();\n  };\n\n  CanvasUtils.drawAbsorber = function (context, absorber) {\n    context.save();\n    context.translate(absorber.position.x, absorber.position.y);\n    context.beginPath();\n    context.arc(0, 0, absorber.size, 0, Math.PI * 2, false);\n    context.closePath();\n    context.fillStyle = ColorUtils_1.ColorUtils.getStyleFromColor(absorber.color);\n    context.fill();\n    context.restore();\n  };\n\n  CanvasUtils.drawLineLinked = function (context, width, begin, end, backgroundMask, colorLine, opacity, shadow) {\n    context.save();\n    context.lineWidth = width;\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n\n    if (backgroundMask) {\n      context.globalCompositeOperation = 'destination-out';\n    }\n\n    if (colorLine) {\n      context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromColor(colorLine, opacity);\n    }\n\n    var shadowColor = typeof shadow.color === \"string\" ? ColorUtils_1.ColorUtils.stringToRgb(shadow.color) : ColorUtils_1.ColorUtils.colorToRgb(shadow.color);\n\n    if (shadow.enable && shadowColor) {\n      context.shadowBlur = shadow.blur;\n      context.shadowColor = ColorUtils_1.ColorUtils.getStyleFromColor(shadowColor);\n    }\n\n    context.stroke();\n    context.restore();\n  };\n\n  CanvasUtils.drawConnectLine = function (context, width, lineStyle, begin, end) {\n    context.save();\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n    context.restore();\n  };\n\n  CanvasUtils.gradient = function (context, p1, p2, midColor, opacity) {\n    var gradStop = Math.floor(p2.size.value / p1.size.value);\n\n    if (!p1.color || !p2.color) {\n      return;\n    }\n\n    var sourcePos = p1.position;\n    var destPos = p2.position;\n    var grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, ColorUtils_1.ColorUtils.getStyleFromColor(p1.color, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, ColorUtils_1.ColorUtils.getStyleFromColor(midColor, opacity));\n    grad.addColorStop(1, ColorUtils_1.ColorUtils.getStyleFromColor(p2.color, opacity));\n    return grad;\n  };\n\n  CanvasUtils.drawGrabLine = function (context, width, begin, end, colorLine, opacity) {\n    context.save();\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n    context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromColor(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n    context.restore();\n  };\n\n  CanvasUtils.drawParticle = function (context, particle, colorValue, backgroundMask, radius, opacity, shadow) {\n    var pos = {\n      x: particle.position.x + particle.offset.x,\n      y: particle.position.y + particle.offset.y\n    };\n    context.save();\n    context.translate(pos.x, pos.y);\n    context.beginPath();\n    var shadowColor = particle.shadowColor;\n\n    if (shadow.enable && shadowColor) {\n      context.shadowBlur = shadow.blur;\n      context.shadowColor = ColorUtils_1.ColorUtils.getStyleFromColor(shadowColor);\n      context.shadowOffsetX = shadow.offset.x;\n      context.shadowOffsetY = shadow.offset.y;\n    }\n\n    context.fillStyle = colorValue;\n\n    if (particle.angle !== 0) {\n      context.rotate(particle.angle * Math.PI / 180);\n    }\n\n    if (backgroundMask) {\n      context.globalCompositeOperation = \"destination-out\";\n    }\n\n    var stroke = particle.stroke;\n\n    if (stroke.width > 0 && particle.strokeColor) {\n      context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromColor(particle.strokeColor, particle.stroke.opacity);\n      context.lineWidth = stroke.width;\n    }\n\n    this.drawShape(context, particle, radius, opacity);\n\n    if (particle.close) {\n      context.closePath();\n    }\n\n    if (stroke.width > 0 && particle.strokeColor) {\n      context.stroke();\n    }\n\n    if (particle.fill) {\n      context.fill();\n    }\n\n    context.restore();\n  };\n\n  CanvasUtils.addShapeDrawer = function (type, drawer) {\n    if (!this.drawers[type]) {\n      this.drawers[type] = drawer;\n    }\n  };\n\n  CanvasUtils.drawShape = function (context, particle, radius, opacity) {\n    if (!particle.shape) {\n      return;\n    }\n\n    var drawer = this.drawers[particle.shape];\n\n    if (!drawer) {\n      return;\n    }\n\n    drawer.draw(context, particle, radius, opacity);\n  };\n\n  CanvasUtils.drawers = {};\n  return CanvasUtils;\n}();\n\nexports.CanvasUtils = CanvasUtils;","map":{"version":3,"sources":["C:/Users/petra/Desktop/face-detection/node_modules/tsparticles/dist/Classes/Utils/CanvasUtils.js"],"names":["Object","defineProperty","exports","value","ColorUtils_1","require","CanvasUtils","paintBase","context","dimension","baseColor","save","fillStyle","fillRect","width","height","restore","clear","clearRect","drawPolygonMask","rawData","stroke","color","ColorUtils","stringToRgb","colorToRgb","beginPath","moveTo","x","y","i","length","lineTo","closePath","strokeStyle","getStyleFromColor","lineWidth","drawPolygonMaskPath","path","position","translate","opacity","drawAbsorber","absorber","arc","size","Math","PI","fill","drawLineLinked","begin","end","backgroundMask","colorLine","shadow","globalCompositeOperation","shadowColor","enable","shadowBlur","blur","drawConnectLine","lineStyle","gradient","p1","p2","midColor","gradStop","floor","sourcePos","destPos","grad","createLinearGradient","addColorStop","drawGrabLine","drawParticle","particle","colorValue","radius","pos","offset","shadowOffsetX","shadowOffsetY","angle","rotate","strokeColor","drawShape","close","addShapeDrawer","type","drawer","drawers","shape","draw"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ColorUtils_1 = require(\"./ColorUtils\");\nvar CanvasUtils = (function () {\n    function CanvasUtils() {\n    }\n    CanvasUtils.paintBase = function (context, dimension, baseColor) {\n        context.save();\n        context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\n        context.fillRect(0, 0, dimension.width, dimension.height);\n        context.restore();\n    };\n    CanvasUtils.clear = function (context, dimension) {\n        context.clearRect(0, 0, dimension.width, dimension.height);\n    };\n    CanvasUtils.drawPolygonMask = function (context, rawData, stroke) {\n        var color = typeof stroke.color === \"string\" ?\n            ColorUtils_1.ColorUtils.stringToRgb(stroke.color) :\n            ColorUtils_1.ColorUtils.colorToRgb(stroke.color);\n        if (color) {\n            context.save();\n            context.beginPath();\n            context.moveTo(rawData[0].x, rawData[0].y);\n            for (var i = 1; i < rawData.length; i++) {\n                context.lineTo(rawData[i].x, rawData[i].y);\n            }\n            context.closePath();\n            context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromColor(color);\n            context.lineWidth = stroke.width;\n            context.stroke();\n            context.restore();\n        }\n    };\n    CanvasUtils.drawPolygonMaskPath = function (context, path, stroke, position) {\n        context.save();\n        context.translate(position.x, position.y);\n        var color = typeof stroke.color === \"string\" ?\n            ColorUtils_1.ColorUtils.stringToRgb(stroke.color) :\n            ColorUtils_1.ColorUtils.colorToRgb(stroke.color);\n        if (color) {\n            context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromColor(color, stroke.opacity);\n            context.lineWidth = stroke.width;\n            context.stroke(path);\n        }\n        context.restore();\n    };\n    CanvasUtils.drawAbsorber = function (context, absorber) {\n        context.save();\n        context.translate(absorber.position.x, absorber.position.y);\n        context.beginPath();\n        context.arc(0, 0, absorber.size, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStyle = ColorUtils_1.ColorUtils.getStyleFromColor(absorber.color);\n        context.fill();\n        context.restore();\n    };\n    CanvasUtils.drawLineLinked = function (context, width, begin, end, backgroundMask, colorLine, opacity, shadow) {\n        context.save();\n        context.lineWidth = width;\n        context.beginPath();\n        context.moveTo(begin.x, begin.y);\n        context.lineTo(end.x, end.y);\n        context.closePath();\n        if (backgroundMask) {\n            context.globalCompositeOperation = 'destination-out';\n        }\n        if (colorLine) {\n            context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromColor(colorLine, opacity);\n        }\n        var shadowColor = typeof shadow.color === \"string\" ?\n            ColorUtils_1.ColorUtils.stringToRgb(shadow.color) :\n            ColorUtils_1.ColorUtils.colorToRgb(shadow.color);\n        if (shadow.enable && shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = ColorUtils_1.ColorUtils.getStyleFromColor(shadowColor);\n        }\n        context.stroke();\n        context.restore();\n    };\n    CanvasUtils.drawConnectLine = function (context, width, lineStyle, begin, end) {\n        context.save();\n        context.beginPath();\n        context.moveTo(begin.x, begin.y);\n        context.lineTo(end.x, end.y);\n        context.closePath();\n        context.lineWidth = width;\n        context.strokeStyle = lineStyle;\n        context.stroke();\n        context.restore();\n    };\n    CanvasUtils.gradient = function (context, p1, p2, midColor, opacity) {\n        var gradStop = Math.floor(p2.size.value / p1.size.value);\n        if (!p1.color || !p2.color) {\n            return;\n        }\n        var sourcePos = p1.position;\n        var destPos = p2.position;\n        var grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n        grad.addColorStop(0, ColorUtils_1.ColorUtils.getStyleFromColor(p1.color, opacity));\n        grad.addColorStop(gradStop > 1 ? 1 : gradStop, ColorUtils_1.ColorUtils.getStyleFromColor(midColor, opacity));\n        grad.addColorStop(1, ColorUtils_1.ColorUtils.getStyleFromColor(p2.color, opacity));\n        return grad;\n    };\n    CanvasUtils.drawGrabLine = function (context, width, begin, end, colorLine, opacity) {\n        context.save();\n        context.beginPath();\n        context.moveTo(begin.x, begin.y);\n        context.lineTo(end.x, end.y);\n        context.closePath();\n        context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromColor(colorLine, opacity);\n        context.lineWidth = width;\n        context.stroke();\n        context.restore();\n    };\n    CanvasUtils.drawParticle = function (context, particle, colorValue, backgroundMask, radius, opacity, shadow) {\n        var pos = {\n            x: particle.position.x + particle.offset.x,\n            y: particle.position.y + particle.offset.y,\n        };\n        context.save();\n        context.translate(pos.x, pos.y);\n        context.beginPath();\n        var shadowColor = particle.shadowColor;\n        if (shadow.enable && shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = ColorUtils_1.ColorUtils.getStyleFromColor(shadowColor);\n            context.shadowOffsetX = shadow.offset.x;\n            context.shadowOffsetY = shadow.offset.y;\n        }\n        context.fillStyle = colorValue;\n        if (particle.angle !== 0) {\n            context.rotate(particle.angle * Math.PI / 180);\n        }\n        if (backgroundMask) {\n            context.globalCompositeOperation = \"destination-out\";\n        }\n        var stroke = particle.stroke;\n        if (stroke.width > 0 && particle.strokeColor) {\n            context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromColor(particle.strokeColor, particle.stroke.opacity);\n            context.lineWidth = stroke.width;\n        }\n        this.drawShape(context, particle, radius, opacity);\n        if (particle.close) {\n            context.closePath();\n        }\n        if (stroke.width > 0 && particle.strokeColor) {\n            context.stroke();\n        }\n        if (particle.fill) {\n            context.fill();\n        }\n        context.restore();\n    };\n    CanvasUtils.addShapeDrawer = function (type, drawer) {\n        if (!this.drawers[type]) {\n            this.drawers[type] = drawer;\n        }\n    };\n    CanvasUtils.drawShape = function (context, particle, radius, opacity) {\n        if (!particle.shape) {\n            return;\n        }\n        var drawer = this.drawers[particle.shape];\n        if (!drawer) {\n            return;\n        }\n        drawer.draw(context, particle, radius, opacity);\n    };\n    CanvasUtils.drawers = {};\n    return CanvasUtils;\n}());\nexports.CanvasUtils = CanvasUtils;\n"]},"metadata":{},"sourceType":"script"}