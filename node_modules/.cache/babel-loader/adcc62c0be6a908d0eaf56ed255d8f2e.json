{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Constants_1 = require(\"./Utils/Constants\");\n\nvar Utils_1 = require(\"./Utils/Utils\");\n\nvar CanvasUtils_1 = require(\"./Utils/CanvasUtils\");\n\nvar ColorUtils_1 = require(\"./Utils/ColorUtils\");\n\nvar Canvas = function () {\n  function Canvas(container) {\n    this.container = container;\n    this.size = {\n      height: 0,\n      width: 0\n    };\n    this.context = null;\n    this.generatedCanvas = false;\n  }\n\n  Canvas.prototype.init = function () {\n    this.resize();\n    var container = this.container;\n    var options = container.options;\n    var cover = options.backgroundMask.cover;\n    var color = typeof options.backgroundMask.cover === \"string\" ? {\n      value: options.backgroundMask.cover\n    } : options.backgroundMask.cover;\n    var trail = options.particles.move.trail;\n    this.coverColor = ColorUtils_1.ColorUtils.colorToRgb(cover.color !== undefined ? typeof cover.color === \"string\" ? {\n      value: cover.color\n    } : cover.color : color);\n    this.trailFillColor = typeof trail.fillColor === \"string\" ? ColorUtils_1.ColorUtils.stringToRgb(trail.fillColor) : ColorUtils_1.ColorUtils.colorToRgb(trail.fillColor);\n    this.paint();\n  };\n\n  Canvas.prototype.loadCanvas = function (canvas, generatedCanvas) {\n    var _a;\n\n    if (!canvas.className) {\n      canvas.className = Constants_1.Constants.canvasClass;\n    }\n\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n\n    this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : false;\n    this.element = canvas;\n    this.size.height = canvas.offsetHeight;\n    this.size.width = canvas.offsetWidth;\n    this.context = this.element.getContext(\"2d\");\n    this.container.retina.init();\n    this.initBackground();\n  };\n\n  Canvas.prototype.destroy = function () {\n    var _a;\n\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n\n    if (this.context) {\n      CanvasUtils_1.CanvasUtils.clear(this.context, this.size);\n    }\n  };\n\n  Canvas.prototype.resize = function () {\n    if (this.element) {\n      this.element.width = this.size.width;\n      this.element.height = this.size.height;\n    }\n  };\n\n  Canvas.prototype.paint = function () {\n    var container = this.container;\n    var options = container.options;\n\n    if (this.context) {\n      if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n        this.paintBase(ColorUtils_1.ColorUtils.getStyleFromColor(this.coverColor));\n      } else {\n        this.paintBase();\n      }\n    }\n  };\n\n  Canvas.prototype.clear = function () {\n    var container = this.container;\n    var options = container.options;\n    var trail = options.particles.move.trail;\n\n    if (options.backgroundMask.enable) {\n      this.paint();\n    } else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n      this.paintBase(ColorUtils_1.ColorUtils.getStyleFromColor(this.trailFillColor, 1 / trail.length));\n    } else if (this.context) {\n      CanvasUtils_1.CanvasUtils.clear(this.context, this.size);\n    }\n  };\n\n  Canvas.prototype.isPointInPath = function (path, point) {\n    var _a, _b;\n\n    return (_b = (_a = this.context) === null || _a === void 0 ? void 0 : _a.isPointInPath(path, point.x, point.y)) !== null && _b !== void 0 ? _b : false;\n  };\n\n  Canvas.prototype.drawPolygonMask = function () {\n    var container = this.container;\n    var options = container.options;\n    var context = this.context;\n    var polygonDraw = options.polygon.draw;\n    var polygon = container.polygon;\n    var rawData = polygon.raw;\n\n    for (var _i = 0, _a = polygon.paths; _i < _a.length; _i++) {\n      var path = _a[_i];\n      var path2d = path.path2d;\n      var path2dSupported = polygon.path2DSupported;\n\n      if (context) {\n        if (path2dSupported && path2d && polygon.offset) {\n          CanvasUtils_1.CanvasUtils.drawPolygonMaskPath(context, path2d, polygonDraw.stroke, polygon.offset);\n        } else if (rawData) {\n          CanvasUtils_1.CanvasUtils.drawPolygonMask(context, rawData, polygonDraw.stroke);\n        }\n      }\n    }\n  };\n\n  Canvas.prototype.drawAbsorber = function (absorber) {\n    var ctx = this.context;\n\n    if (!ctx) {\n      return;\n    }\n\n    CanvasUtils_1.CanvasUtils.drawAbsorber(ctx, absorber);\n  };\n\n  Canvas.prototype.drawLinkedLine = function (p1, p2, opacity) {\n    var _a;\n\n    var container = this.container;\n    var options = container.options;\n    var pos1 = p1.position;\n    var pos2 = p2.position;\n    var ctx = this.context;\n\n    if (!ctx) {\n      return;\n    }\n\n    var colorLine;\n    var twinkle = options.particles.twinkle.lines;\n    var twinkleFreq = twinkle.frequency;\n    var twinkleColor = typeof twinkle.color === \"string\" ? {\n      value: twinkle.color\n    } : twinkle.color;\n    var twinkleRgb = twinkleColor !== undefined ? ColorUtils_1.ColorUtils.colorToRgb(twinkleColor) : undefined;\n    var twinkling = twinkle.enable && Math.random() < twinkleFreq;\n\n    if (twinkling && twinkleRgb !== undefined) {\n      colorLine = twinkleRgb;\n      opacity = twinkle.opacity;\n    } else if (container.particles.lineLinkedColor === Constants_1.Constants.randomColorValue) {\n      colorLine = ColorUtils_1.ColorUtils.getRandomRgbColor();\n    } else if (container.particles.lineLinkedColor == \"mid\" && p1.color && p2.color) {\n      var sourceColor = p1.color;\n      var destColor = p2.color;\n      colorLine = {\n        b: Utils_1.Utils.mix(sourceColor.b, destColor.b, p1.size.value, p2.size.value),\n        g: Utils_1.Utils.mix(sourceColor.g, destColor.g, p1.size.value, p2.size.value),\n        r: Utils_1.Utils.mix(sourceColor.r, destColor.r, p1.size.value, p2.size.value)\n      };\n    } else {\n      colorLine = container.particles.lineLinkedColor;\n    }\n\n    var width = (_a = p1.lineLinkedWidth) !== null && _a !== void 0 ? _a : container.retina.lineLinkedWidth;\n    CanvasUtils_1.CanvasUtils.drawLineLinked(ctx, width, pos1, pos2, options.backgroundMask.enable, colorLine, opacity, p1.particlesOptions.lineLinked.shadow);\n  };\n\n  Canvas.prototype.drawConnectLine = function (p1, p2) {\n    var _a;\n\n    var lineStyle = this.lineStyle(p1, p2);\n\n    if (!lineStyle) {\n      return;\n    }\n\n    var ctx = this.context;\n\n    if (!ctx) {\n      return;\n    }\n\n    CanvasUtils_1.CanvasUtils.drawConnectLine(ctx, (_a = p1.lineLinkedWidth) !== null && _a !== void 0 ? _a : this.container.retina.lineLinkedWidth, lineStyle, p1.position, p2.position);\n  };\n\n  Canvas.prototype.drawGrabLine = function (particle, opacity, mousePos) {\n    var _a;\n\n    var container = this.container;\n    var optColor = particle.particlesOptions.lineLinked.color;\n    var lineColor = container.particles.grabLineColor || (typeof optColor === \"string\" ? ColorUtils_1.ColorUtils.stringToRgb(optColor) : ColorUtils_1.ColorUtils.colorToRgb(optColor));\n\n    if (lineColor == Constants_1.Constants.randomColorValue) {\n      lineColor = ColorUtils_1.ColorUtils.getRandomRgbColor();\n    }\n\n    container.particles.grabLineColor = lineColor;\n    var ctx = container.canvas.context;\n\n    if (!ctx) {\n      return;\n    }\n\n    var colorLine;\n\n    if (container.particles.grabLineColor === Constants_1.Constants.randomColorValue) {\n      colorLine = ColorUtils_1.ColorUtils.getRandomRgbColor();\n    } else {\n      colorLine = container.particles.grabLineColor;\n    }\n\n    if (colorLine === undefined) {\n      return;\n    }\n\n    var beginPos = {\n      x: particle.position.x + particle.offset.x,\n      y: particle.position.y + particle.offset.y\n    };\n    CanvasUtils_1.CanvasUtils.drawGrabLine(ctx, (_a = particle.lineLinkedWidth) !== null && _a !== void 0 ? _a : container.retina.lineLinkedWidth, beginPos, mousePos, colorLine, opacity);\n  };\n\n  Canvas.prototype.drawParticle = function (particle) {\n    var _a, _b, _c;\n\n    var container = this.container;\n    var options = container.options;\n    var twinkle = particle.particlesOptions.twinkle.particles;\n    var twinkleFreq = twinkle.frequency;\n    var twinkleColor = typeof twinkle.color === \"string\" ? {\n      value: twinkle.color\n    } : twinkle.color;\n    var twinkleRgb = twinkleColor !== undefined ? ColorUtils_1.ColorUtils.colorToRgb(twinkleColor) : undefined;\n    var twinkling = twinkle.enable && Math.random() < twinkleFreq;\n    var radius = (_a = particle.bubble.radius) !== null && _a !== void 0 ? _a : particle.size.value;\n    var opacity = twinkling ? twinkle.opacity : (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : particle.opacity.value;\n    var color = twinkling && twinkleRgb !== undefined ? twinkleRgb : (_c = particle.bubble.color) !== null && _c !== void 0 ? _c : particle.color;\n    var colorValue = color !== undefined ? ColorUtils_1.ColorUtils.getStyleFromColor(color, opacity) : undefined;\n\n    if (!this.context || !colorValue) {\n      return;\n    }\n\n    CanvasUtils_1.CanvasUtils.drawParticle(this.context, particle, colorValue, options.backgroundMask.enable, radius, opacity, particle.particlesOptions.shadow);\n  };\n\n  Canvas.prototype.paintBase = function (baseColor) {\n    if (this.context) {\n      CanvasUtils_1.CanvasUtils.paintBase(this.context, this.size, baseColor);\n    }\n  };\n\n  Canvas.prototype.lineStyle = function (p1, p2) {\n    var container = this.container;\n    var options = container.options;\n    var connectOptions = options.interactivity.modes.connect;\n\n    if (p1.color && p2.color) {\n      var sourceRgb = p1.color;\n      var destRgb = p2.color;\n      var midRgb = {\n        b: Utils_1.Utils.mix(sourceRgb.b, destRgb.b, p1.size.value, p2.size.value),\n        g: Utils_1.Utils.mix(sourceRgb.g, destRgb.g, p1.size.value, p2.size.value),\n        r: Utils_1.Utils.mix(sourceRgb.r, destRgb.r, p1.size.value, p2.size.value)\n      };\n\n      if (this.context) {\n        return CanvasUtils_1.CanvasUtils.gradient(this.context, p1, p2, midRgb, connectOptions.lineLinked.opacity);\n      }\n    }\n  };\n\n  Canvas.prototype.initBackground = function () {\n    var container = this.container;\n    var options = container.options;\n    var background = options.background;\n    var element = this.element;\n\n    if (!element) {\n      return;\n    }\n\n    var elementStyle = element.style;\n\n    if (background.color) {\n      var color = typeof background.color === \"string\" ? ColorUtils_1.ColorUtils.stringToRgb(background.color) : ColorUtils_1.ColorUtils.colorToRgb(background.color);\n\n      if (color) {\n        elementStyle.backgroundColor = ColorUtils_1.ColorUtils.getStyleFromColor(color, background.opacity);\n      }\n    }\n\n    if (background.image) {\n      elementStyle.backgroundImage = background.image;\n    }\n\n    if (background.position) {\n      elementStyle.backgroundPosition = background.position;\n    }\n\n    if (background.repeat) {\n      elementStyle.backgroundRepeat = background.repeat;\n    }\n\n    if (background.size) {\n      elementStyle.backgroundSize = background.size;\n    }\n  };\n\n  return Canvas;\n}();\n\nexports.Canvas = Canvas;","map":{"version":3,"sources":["C:/Users/petra/Desktop/face-detection/node_modules/tsparticles/dist/Classes/Canvas.js"],"names":["Object","defineProperty","exports","value","Constants_1","require","Utils_1","CanvasUtils_1","ColorUtils_1","Canvas","container","size","height","width","context","generatedCanvas","prototype","init","resize","options","cover","backgroundMask","color","trail","particles","move","coverColor","ColorUtils","colorToRgb","undefined","trailFillColor","fillColor","stringToRgb","paint","loadCanvas","canvas","_a","className","Constants","canvasClass","element","remove","offsetHeight","offsetWidth","getContext","retina","initBackground","destroy","CanvasUtils","clear","enable","paintBase","getStyleFromColor","length","isPointInPath","path","point","_b","x","y","drawPolygonMask","polygonDraw","polygon","draw","rawData","raw","_i","paths","path2d","path2dSupported","path2DSupported","offset","drawPolygonMaskPath","stroke","drawAbsorber","absorber","ctx","drawLinkedLine","p1","p2","opacity","pos1","position","pos2","colorLine","twinkle","lines","twinkleFreq","frequency","twinkleColor","twinkleRgb","twinkling","Math","random","lineLinkedColor","randomColorValue","getRandomRgbColor","sourceColor","destColor","b","Utils","mix","g","r","lineLinkedWidth","drawLineLinked","particlesOptions","lineLinked","shadow","drawConnectLine","lineStyle","drawGrabLine","particle","mousePos","optColor","lineColor","grabLineColor","beginPos","drawParticle","_c","radius","bubble","colorValue","baseColor","connectOptions","interactivity","modes","connect","sourceRgb","destRgb","midRgb","gradient","background","elementStyle","style","backgroundColor","image","backgroundImage","backgroundPosition","repeat","backgroundRepeat","backgroundSize"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Constants_1 = require(\"./Utils/Constants\");\nvar Utils_1 = require(\"./Utils/Utils\");\nvar CanvasUtils_1 = require(\"./Utils/CanvasUtils\");\nvar ColorUtils_1 = require(\"./Utils/ColorUtils\");\nvar Canvas = (function () {\n    function Canvas(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this.context = null;\n        this.generatedCanvas = false;\n    }\n    Canvas.prototype.init = function () {\n        this.resize();\n        var container = this.container;\n        var options = container.options;\n        var cover = options.backgroundMask.cover;\n        var color = (typeof options.backgroundMask.cover === \"string\" ?\n            { value: options.backgroundMask.cover } :\n            options.backgroundMask.cover);\n        var trail = options.particles.move.trail;\n        this.coverColor = ColorUtils_1.ColorUtils.colorToRgb(cover.color !== undefined ?\n            typeof cover.color === \"string\" ?\n                { value: cover.color } :\n                cover.color :\n            color);\n        this.trailFillColor = typeof trail.fillColor === \"string\" ?\n            ColorUtils_1.ColorUtils.stringToRgb(trail.fillColor) :\n            ColorUtils_1.ColorUtils.colorToRgb(trail.fillColor);\n        this.paint();\n    };\n    Canvas.prototype.loadCanvas = function (canvas, generatedCanvas) {\n        var _a;\n        if (!canvas.className) {\n            canvas.className = Constants_1.Constants.canvasClass;\n        }\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : false;\n        this.element = canvas;\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this.context = this.element.getContext(\"2d\");\n        this.container.retina.init();\n        this.initBackground();\n    };\n    Canvas.prototype.destroy = function () {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        if (this.context) {\n            CanvasUtils_1.CanvasUtils.clear(this.context, this.size);\n        }\n    };\n    Canvas.prototype.resize = function () {\n        if (this.element) {\n            this.element.width = this.size.width;\n            this.element.height = this.size.height;\n        }\n    };\n    Canvas.prototype.paint = function () {\n        var container = this.container;\n        var options = container.options;\n        if (this.context) {\n            if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n                this.paintBase(ColorUtils_1.ColorUtils.getStyleFromColor(this.coverColor));\n            }\n            else {\n                this.paintBase();\n            }\n        }\n    };\n    Canvas.prototype.clear = function () {\n        var container = this.container;\n        var options = container.options;\n        var trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n            this.paintBase(ColorUtils_1.ColorUtils.getStyleFromColor(this.trailFillColor, 1 / trail.length));\n        }\n        else if (this.context) {\n            CanvasUtils_1.CanvasUtils.clear(this.context, this.size);\n        }\n    };\n    Canvas.prototype.isPointInPath = function (path, point) {\n        var _a, _b;\n        return (_b = (_a = this.context) === null || _a === void 0 ? void 0 : _a.isPointInPath(path, point.x, point.y)) !== null && _b !== void 0 ? _b : false;\n    };\n    Canvas.prototype.drawPolygonMask = function () {\n        var container = this.container;\n        var options = container.options;\n        var context = this.context;\n        var polygonDraw = options.polygon.draw;\n        var polygon = container.polygon;\n        var rawData = polygon.raw;\n        for (var _i = 0, _a = polygon.paths; _i < _a.length; _i++) {\n            var path = _a[_i];\n            var path2d = path.path2d;\n            var path2dSupported = polygon.path2DSupported;\n            if (context) {\n                if (path2dSupported && path2d && polygon.offset) {\n                    CanvasUtils_1.CanvasUtils.drawPolygonMaskPath(context, path2d, polygonDraw.stroke, polygon.offset);\n                }\n                else if (rawData) {\n                    CanvasUtils_1.CanvasUtils.drawPolygonMask(context, rawData, polygonDraw.stroke);\n                }\n            }\n        }\n    };\n    Canvas.prototype.drawAbsorber = function (absorber) {\n        var ctx = this.context;\n        if (!ctx) {\n            return;\n        }\n        CanvasUtils_1.CanvasUtils.drawAbsorber(ctx, absorber);\n    };\n    Canvas.prototype.drawLinkedLine = function (p1, p2, opacity) {\n        var _a;\n        var container = this.container;\n        var options = container.options;\n        var pos1 = p1.position;\n        var pos2 = p2.position;\n        var ctx = this.context;\n        if (!ctx) {\n            return;\n        }\n        var colorLine;\n        var twinkle = options.particles.twinkle.lines;\n        var twinkleFreq = twinkle.frequency;\n        var twinkleColor = typeof twinkle.color === \"string\" ? { value: twinkle.color } : twinkle.color;\n        var twinkleRgb = twinkleColor !== undefined ? ColorUtils_1.ColorUtils.colorToRgb(twinkleColor) : undefined;\n        var twinkling = twinkle.enable && Math.random() < twinkleFreq;\n        if (twinkling && twinkleRgb !== undefined) {\n            colorLine = twinkleRgb;\n            opacity = twinkle.opacity;\n        }\n        else if (container.particles.lineLinkedColor === Constants_1.Constants.randomColorValue) {\n            colorLine = ColorUtils_1.ColorUtils.getRandomRgbColor();\n        }\n        else if (container.particles.lineLinkedColor == \"mid\" && p1.color && p2.color) {\n            var sourceColor = p1.color;\n            var destColor = p2.color;\n            colorLine = {\n                b: Utils_1.Utils.mix(sourceColor.b, destColor.b, p1.size.value, p2.size.value),\n                g: Utils_1.Utils.mix(sourceColor.g, destColor.g, p1.size.value, p2.size.value),\n                r: Utils_1.Utils.mix(sourceColor.r, destColor.r, p1.size.value, p2.size.value),\n            };\n        }\n        else {\n            colorLine = container.particles.lineLinkedColor;\n        }\n        var width = (_a = p1.lineLinkedWidth) !== null && _a !== void 0 ? _a : container.retina.lineLinkedWidth;\n        CanvasUtils_1.CanvasUtils.drawLineLinked(ctx, width, pos1, pos2, options.backgroundMask.enable, colorLine, opacity, p1.particlesOptions.lineLinked.shadow);\n    };\n    Canvas.prototype.drawConnectLine = function (p1, p2) {\n        var _a;\n        var lineStyle = this.lineStyle(p1, p2);\n        if (!lineStyle) {\n            return;\n        }\n        var ctx = this.context;\n        if (!ctx) {\n            return;\n        }\n        CanvasUtils_1.CanvasUtils.drawConnectLine(ctx, (_a = p1.lineLinkedWidth) !== null && _a !== void 0 ? _a : this.container.retina.lineLinkedWidth, lineStyle, p1.position, p2.position);\n    };\n    Canvas.prototype.drawGrabLine = function (particle, opacity, mousePos) {\n        var _a;\n        var container = this.container;\n        var optColor = particle.particlesOptions.lineLinked.color;\n        var lineColor = container.particles.grabLineColor ||\n            (typeof optColor === \"string\" ? ColorUtils_1.ColorUtils.stringToRgb(optColor) : ColorUtils_1.ColorUtils.colorToRgb(optColor));\n        if (lineColor == Constants_1.Constants.randomColorValue) {\n            lineColor = ColorUtils_1.ColorUtils.getRandomRgbColor();\n        }\n        container.particles.grabLineColor = lineColor;\n        var ctx = container.canvas.context;\n        if (!ctx) {\n            return;\n        }\n        var colorLine;\n        if (container.particles.grabLineColor === Constants_1.Constants.randomColorValue) {\n            colorLine = ColorUtils_1.ColorUtils.getRandomRgbColor();\n        }\n        else {\n            colorLine = container.particles.grabLineColor;\n        }\n        if (colorLine === undefined) {\n            return;\n        }\n        var beginPos = {\n            x: particle.position.x + particle.offset.x,\n            y: particle.position.y + particle.offset.y,\n        };\n        CanvasUtils_1.CanvasUtils.drawGrabLine(ctx, (_a = particle.lineLinkedWidth) !== null && _a !== void 0 ? _a : container.retina.lineLinkedWidth, beginPos, mousePos, colorLine, opacity);\n    };\n    Canvas.prototype.drawParticle = function (particle) {\n        var _a, _b, _c;\n        var container = this.container;\n        var options = container.options;\n        var twinkle = particle.particlesOptions.twinkle.particles;\n        var twinkleFreq = twinkle.frequency;\n        var twinkleColor = typeof twinkle.color === \"string\" ? { value: twinkle.color } : twinkle.color;\n        var twinkleRgb = twinkleColor !== undefined ? ColorUtils_1.ColorUtils.colorToRgb(twinkleColor) : undefined;\n        var twinkling = twinkle.enable && Math.random() < twinkleFreq;\n        var radius = (_a = particle.bubble.radius) !== null && _a !== void 0 ? _a : particle.size.value;\n        var opacity = twinkling ? twinkle.opacity : (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : particle.opacity.value;\n        var color = twinkling && twinkleRgb !== undefined ?\n            twinkleRgb : (_c = particle.bubble.color) !== null && _c !== void 0 ? _c : particle.color;\n        var colorValue = color !== undefined ? ColorUtils_1.ColorUtils.getStyleFromColor(color, opacity) : undefined;\n        if (!this.context || !colorValue) {\n            return;\n        }\n        CanvasUtils_1.CanvasUtils.drawParticle(this.context, particle, colorValue, options.backgroundMask.enable, radius, opacity, particle.particlesOptions.shadow);\n    };\n    Canvas.prototype.paintBase = function (baseColor) {\n        if (this.context) {\n            CanvasUtils_1.CanvasUtils.paintBase(this.context, this.size, baseColor);\n        }\n    };\n    Canvas.prototype.lineStyle = function (p1, p2) {\n        var container = this.container;\n        var options = container.options;\n        var connectOptions = options.interactivity.modes.connect;\n        if (p1.color && p2.color) {\n            var sourceRgb = p1.color;\n            var destRgb = p2.color;\n            var midRgb = {\n                b: Utils_1.Utils.mix(sourceRgb.b, destRgb.b, p1.size.value, p2.size.value),\n                g: Utils_1.Utils.mix(sourceRgb.g, destRgb.g, p1.size.value, p2.size.value),\n                r: Utils_1.Utils.mix(sourceRgb.r, destRgb.r, p1.size.value, p2.size.value),\n            };\n            if (this.context) {\n                return CanvasUtils_1.CanvasUtils.gradient(this.context, p1, p2, midRgb, connectOptions.lineLinked.opacity);\n            }\n        }\n    };\n    Canvas.prototype.initBackground = function () {\n        var container = this.container;\n        var options = container.options;\n        var background = options.background;\n        var element = this.element;\n        if (!element) {\n            return;\n        }\n        var elementStyle = element.style;\n        if (background.color) {\n            var color = typeof background.color === \"string\" ?\n                ColorUtils_1.ColorUtils.stringToRgb(background.color) :\n                ColorUtils_1.ColorUtils.colorToRgb(background.color);\n            if (color) {\n                elementStyle.backgroundColor = ColorUtils_1.ColorUtils.getStyleFromColor(color, background.opacity);\n            }\n        }\n        if (background.image) {\n            elementStyle.backgroundImage = background.image;\n        }\n        if (background.position) {\n            elementStyle.backgroundPosition = background.position;\n        }\n        if (background.repeat) {\n            elementStyle.backgroundRepeat = background.repeat;\n        }\n        if (background.size) {\n            elementStyle.backgroundSize = background.size;\n        }\n    };\n    return Canvas;\n}());\nexports.Canvas = Canvas;\n"]},"metadata":{},"sourceType":"script"}